import React, { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useApp } from '../context/AppContext';
import ReactMarkdown from 'react-markdown';
import LoadingAnimation from '../components/LoadingAnimation';
import { motion } from 'framer-motion';
import './PlanPage.css'; // Import page-specific styles

const PlanPage = () => {
  const { itinerary, isLoading, error, clearPlan } = useApp();
  const navigate = useNavigate();

  // If the user lands here with no data (e.g., refresh), send them back
  useEffect(() => {
    if (!isLoading && !itinerary && !error) {
      navigate('/');
    }
  }, [isLoading, itinerary, error, navigate]);

  const handleGoBack = () => {
    clearPlan();
    navigate('/');
  }

  if (isLoading) {
    return <LoadingAnimation />;
  }

  return (
    <main className="card">
      <button
        onClick={handleGoBack}
        className="back-button"
      >
        &larr; Start New Plan
      </button>

      {error && (
        <motion.div 
            initial={{ opacity: 0, y: 10 }} 
            animate={{ opacity: 1, y: 0 }}
            className="error-box"
        >
          <strong>Error:</strong> {error}
          <p>Please try adjusting your query and go back to try again.</p>
        </motion.div>
      )}

      {itinerary && (
        <motion.div
          className="plan-content"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 0.8 }}
        >
          {/* This is the markdown content, styled by PlanPage.css */}
          <article className="prose">
            <ReactMarkdown>{itinerary}</ReactMarkdown>
          </article>
          
          <div className="disclaimer-box">
            <strong>⚠️ Data Disclaimer:</strong> The flight and location data, as well as costs and timings, are estimates generated by the AI and must be verified separately before booking.
          </div>
        </motion.div>
      )}
    </main>
  );
};

export default PlanPage;